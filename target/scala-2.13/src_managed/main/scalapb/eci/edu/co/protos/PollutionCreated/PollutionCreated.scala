// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package eci.edu.co.protos.PollutionCreated

/** @param hour
  *   Formato esperado HH:MM
  * @param date
  *   Formato esperado YYYY-MM-DD
  */
@SerialVersionUID(0L)
final case class PollutionCreated(
    state: _root_.scala.Predef.String = "",
    city: _root_.scala.Predef.String = "",
    aqiValue: _root_.scala.Double = 0.0,
    aqiColor: _root_.scala.Predef.String = "",
    hour: _root_.scala.Predef.String = "",
    date: _root_.scala.Predef.String = "",
    correlationId: _root_.scala.Predef.String = "",
    created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PollutionCreated] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = state
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = city
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = aqiValue
        if (__value != 0.0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(3, __value)
        }
      };
      
      {
        val __value = aqiColor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = hour
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = date
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = correlationId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      if (created.isDefined) {
        val __value = created.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = state
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = city
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = aqiValue
        if (__v != 0.0) {
          _output__.writeDouble(3, __v)
        }
      };
      {
        val __v = aqiColor
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = hour
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = date
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = correlationId
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      created.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withState(__v: _root_.scala.Predef.String): PollutionCreated = copy(state = __v)
    def withCity(__v: _root_.scala.Predef.String): PollutionCreated = copy(city = __v)
    def withAqiValue(__v: _root_.scala.Double): PollutionCreated = copy(aqiValue = __v)
    def withAqiColor(__v: _root_.scala.Predef.String): PollutionCreated = copy(aqiColor = __v)
    def withHour(__v: _root_.scala.Predef.String): PollutionCreated = copy(hour = __v)
    def withDate(__v: _root_.scala.Predef.String): PollutionCreated = copy(date = __v)
    def withCorrelationId(__v: _root_.scala.Predef.String): PollutionCreated = copy(correlationId = __v)
    def getCreated: com.google.protobuf.timestamp.Timestamp = created.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearCreated: PollutionCreated = copy(created = _root_.scala.None)
    def withCreated(__v: com.google.protobuf.timestamp.Timestamp): PollutionCreated = copy(created = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = state
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = city
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = aqiValue
          if (__t != 0.0) __t else null
        }
        case 4 => {
          val __t = aqiColor
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = hour
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = date
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = correlationId
          if (__t != "") __t else null
        }
        case 8 => created.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(state)
        case 2 => _root_.scalapb.descriptors.PString(city)
        case 3 => _root_.scalapb.descriptors.PDouble(aqiValue)
        case 4 => _root_.scalapb.descriptors.PString(aqiColor)
        case 5 => _root_.scalapb.descriptors.PString(hour)
        case 6 => _root_.scalapb.descriptors.PString(date)
        case 7 => _root_.scalapb.descriptors.PString(correlationId)
        case 8 => created.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = eci.edu.co.protos.PollutionCreated.PollutionCreated
    // @@protoc_insertion_point(GeneratedMessage[eci.edu.co.protos.PollutionCreated])
}

object PollutionCreated extends scalapb.GeneratedMessageCompanion[eci.edu.co.protos.PollutionCreated.PollutionCreated] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[eci.edu.co.protos.PollutionCreated.PollutionCreated] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): eci.edu.co.protos.PollutionCreated.PollutionCreated = {
    var __state: _root_.scala.Predef.String = ""
    var __city: _root_.scala.Predef.String = ""
    var __aqiValue: _root_.scala.Double = 0.0
    var __aqiColor: _root_.scala.Predef.String = ""
    var __hour: _root_.scala.Predef.String = ""
    var __date: _root_.scala.Predef.String = ""
    var __correlationId: _root_.scala.Predef.String = ""
    var __created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __state = _input__.readStringRequireUtf8()
        case 18 =>
          __city = _input__.readStringRequireUtf8()
        case 25 =>
          __aqiValue = _input__.readDouble()
        case 34 =>
          __aqiColor = _input__.readStringRequireUtf8()
        case 42 =>
          __hour = _input__.readStringRequireUtf8()
        case 50 =>
          __date = _input__.readStringRequireUtf8()
        case 58 =>
          __correlationId = _input__.readStringRequireUtf8()
        case 66 =>
          __created = Option(__created.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    eci.edu.co.protos.PollutionCreated.PollutionCreated(
        state = __state,
        city = __city,
        aqiValue = __aqiValue,
        aqiColor = __aqiColor,
        hour = __hour,
        date = __date,
        correlationId = __correlationId,
        created = __created,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[eci.edu.co.protos.PollutionCreated.PollutionCreated] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      eci.edu.co.protos.PollutionCreated.PollutionCreated(
        state = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        city = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        aqiValue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Double]).getOrElse(0.0),
        aqiColor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        hour = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        date = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        correlationId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        created = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PollutionCreatedProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PollutionCreatedProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 8 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = eci.edu.co.protos.PollutionCreated.PollutionCreated(
    state = "",
    city = "",
    aqiValue = 0.0,
    aqiColor = "",
    hour = "",
    date = "",
    correlationId = "",
    created = _root_.scala.None
  )
  implicit class PollutionCreatedLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, eci.edu.co.protos.PollutionCreated.PollutionCreated]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, eci.edu.co.protos.PollutionCreated.PollutionCreated](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def city: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.city)((c_, f_) => c_.copy(city = f_))
    def aqiValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.aqiValue)((c_, f_) => c_.copy(aqiValue = f_))
    def aqiColor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.aqiColor)((c_, f_) => c_.copy(aqiColor = f_))
    def hour: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.hour)((c_, f_) => c_.copy(hour = f_))
    def date: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.date)((c_, f_) => c_.copy(date = f_))
    def correlationId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.correlationId)((c_, f_) => c_.copy(correlationId = f_))
    def created: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCreated)((c_, f_) => c_.copy(created = Option(f_)))
    def optionalCreated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.created)((c_, f_) => c_.copy(created = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  final val CITY_FIELD_NUMBER = 2
  final val AQIVALUE_FIELD_NUMBER = 3
  final val AQICOLOR_FIELD_NUMBER = 4
  final val HOUR_FIELD_NUMBER = 5
  final val DATE_FIELD_NUMBER = 6
  final val CORRELATIONID_FIELD_NUMBER = 7
  final val CREATED_FIELD_NUMBER = 8
  def of(
    state: _root_.scala.Predef.String,
    city: _root_.scala.Predef.String,
    aqiValue: _root_.scala.Double,
    aqiColor: _root_.scala.Predef.String,
    hour: _root_.scala.Predef.String,
    date: _root_.scala.Predef.String,
    correlationId: _root_.scala.Predef.String,
    created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
  ): _root_.eci.edu.co.protos.PollutionCreated.PollutionCreated = _root_.eci.edu.co.protos.PollutionCreated.PollutionCreated(
    state,
    city,
    aqiValue,
    aqiColor,
    hour,
    date,
    correlationId,
    created
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[eci.edu.co.protos.PollutionCreated])
}
