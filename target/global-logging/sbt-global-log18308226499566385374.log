[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ethan\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ethan\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 17.0.8)
[debug]       Load.loadUnit: plugins took 144.6921ms
[debug]       Load.loadUnit: defsScala took 0.6226ms
[debug] [Loading] Scanning directory C:\Users\Ethan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ethan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.6197 ms
[debug]           Load.resolveProject(global-plugins) took 58.112ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ethan\.sbt\1.0\plugins, plugins: List(<none>))) took 112.3328ms
[debug] [Loading] Done in C:\Users\Ethan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 143.3653ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5652ms
[debug]     Load.loadUnit(file:/C:/Users/Ethan/.sbt/1.0/plugins/, ...) took 305.9943ms
[debug]   Load.apply: load took 526.5509ms
[debug]   Load.apply: resolveProjects took 13.8002ms
[debug]   Load.apply: finalTransforms took 93.1493ms
[debug]   Load.apply: config.delegates took 16.3009ms
[debug]   Load.apply: Def.make(settings)... took 626.4583ms
[debug]   Load.apply: structureIndex took 142.6869ms
[debug]   Load.apply: mkStreams took 2.7138ms
[info] loading global plugins from C:\Users\Ethan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3618.7461ms
[debug]           Load.loadUnit: plugins took 38.713ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Memoria Guerra\9no Semestre\PSFD\Pollution\project
[debug]             Load.loadUnit: mkEval took 5.1284ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Memoria Guerra\9no Semestre\PSFD\Pollution\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5333 ms
[info] loading settings for project pollution-build from plugins.sbt,idea1.sbt ...
[debug]               Load.resolveProject(pollution-build) took 3.3185ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pollution-build, base: C:\Memoria Guerra\9no Semestre\PSFD\Pollution\project, plugins: List(<none>))) took 5.3369ms
[debug] [Loading] Done in C:\Memoria Guerra\9no Semestre\PSFD\Pollution\project, returning: (pollution-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2745.4149ms
[debug]           Load.loadUnit: cleanEvalClasses took 12.3075ms
[debug]         Load.loadUnit(file:/C:/Memoria%20Guerra/9no%20Semestre/PSFD/Pollution/project/, ...) took 2797.6948ms
[debug]       Load.apply: load took 2800.2519ms
[debug]       Load.apply: resolveProjects took 0.1258ms
[debug]       Load.apply: finalTransforms took 15.232ms
[debug]       Load.apply: config.delegates took 0.5364ms
[debug]       Load.apply: Def.make(settings)... took 95.1317ms
[debug]       Load.apply: structureIndex took 38.0513ms
[debug]       Load.apply: mkStreams took 0.0018ms
[info] loading project definition from C:\Memoria Guerra\9no Semestre\PSFD\Pollution\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4919.59ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Memoria Guerra\9no Semestre\PSFD\Pollution
[debug]       Load.loadUnit: mkEval took 0.3374ms
[error] Type error in expression
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
